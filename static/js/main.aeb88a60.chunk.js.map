{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","style","color","href","title","type","id","aboutpage","onChange","event","target","value","themeSet","name","TextForm","useState","text","setText","heading","backgroundColor","placeholder","newText","rows","onClick","toUpperCase","showAlert","toLowerCase","find","prompt","replace","length","newtext","alert","trim","split","Alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aeb88a60.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    const handleThemeColor = (event)=>{\r\n        let color = event.target.value\r\n        props.themeSet(color)\r\n    }\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" style={{color: props.mode === \"success\"?\"white\": props.mode === \"info\"?\"white\":\"\"}} to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" style={{color: props.mode === \"success\"?\"white\": props.mode === \"info\"?\"white\":\"\"}} href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" style={{color: props.mode === \"success\"?\"white\": props.mode === \"info\"?\"white\":\"\"}}  aria-current=\"page\" href=\"/\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" style={{color: props.mode === \"success\"?\"white\": props.mode === \"info\"?\"white\":\"\"}}  href=\"/\">{props.aboutpage}</a>\r\n                    </li>\r\n                </ul>\r\n                {/* <div className={`form-check form-switch text-${props.mode === \"light\"?\"dark\":\"light\"} mx-2`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === \"light\"?\"Enable Dark Mode\":\"Enable Light Mode\"}</label>\r\n                </div> */}\r\n            \r\n                <div className={`form-check text-${props.mode === \"light\"?\"dark\":\"light\"}`} onChange={handleThemeColor}>\r\n                    <input className=\"colorDiv\" type=\"radio\" value=\"green\" name=\"color\"/><b>Green</b>\r\n                    <input className=\"colorDiv\" type=\"radio\" value=\"blue\" name=\"color\" /><b>Blue</b>\r\n                    <input className=\"colorDiv\"type=\"radio\" value=\"dark\" name=\"color\"/><b>Dark</b>\r\n                    <input className=\"colorDiv\" type=\"radio\" value=\"light\" name=\"color\"/><b>Light</b>\r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutpage: PropTypes.string.isRequired \r\n}\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutpage: \"About text here\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"button clicked\");\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\")\r\n    }\r\n    const handleLowClick = ()=>{\r\n        // console.log(\"button clicked\");\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"on chnage\");\r\n        let newText = event.target.value\r\n        setText(newText)\r\n    }\r\n    const handleReplaceClick = () =>{\r\n        var find = prompt('Enter the word you want to Change:','');\r\n        var replace = prompt('Enter the word you want to Replace:','');\r\n        if (text.length > 1){\r\n            let newtext = text.replace(find, replace)\r\n            setText(newtext)\r\n            props.showAlert(\"Text replaced\", \"success\")\r\n        }else{\r\n            alert(\"please enter some text\")\r\n        }\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    // setText(\"This is new\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode === \"dark\"?\"#7f7e88\":\"white\", \r\n            color: props.mode === \"dark\"?\"white\":\"black\"}} value={text} placeholder=\"Enter your text here\" onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n            </div>\r\n            <button className={`btn btn-${props.mode ===\"light\"?\"dark\":props.mode ===\"dark\"?\"secondary\":props.mode} mx-1`} onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className={`btn btn-${props.mode ===\"light\"?\"dark\":props.mode ===\"dark\"?\"secondary\":props.mode} mx-1`} onClick={handleLowClick}>Convert to lowercase</button>\r\n            <button className={`btn btn-${props.mode ===\"light\"?\"dark\":props.mode ===\"dark\"?\"secondary\":props.mode} mx-1`} onClick={handleReplaceClick}>Replace Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n            <h2>Your text summery</h2>\r\n            <p>{(text.length > 0)?text.trim().split(\" \").length:0} words and {text.length} characters</p>\r\n            {/* <p>{text.split(\" \").length} words and {text.length} characters</p> */}\r\n            <p>{(text.length > 0)?0.008 * (text.trim().split(\" \").length):\"0:00\"} Minute read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        props.alert && <>\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react'\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import Exercise from './components/Exercise';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\n// Get theme color from local \n  const [mode, setMode] = useState(\"light\");\n  \n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },1500)\n  }\n  // const toggleMode = () =>{\n  //   if(mode === \"light\"){\n  //     setMode(\"dark\");\n  //     document.body.style.backgroundColor = \"#1d304c\";\n  //     showAlert(\"Dark Mode has been enabled\", \"success\")\n  //   }else{\n  //     setMode(\"light\")\n  //     document.body.style.backgroundColor = \"white\";\n  //     showAlert(\"Light Mode has been enabled\", \"success\")\n  //   }\n  // }\n  const themeSet = (color)=>{\n    if (color === \"light\"){\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtlis - Light\";\n      // setInterval(() => {\n      //   document.title = \"TextUtlis Is awesome\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils\"\n      // }, 1500);\n    }\n    else if(color === \"dark\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#1d304c\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtlis - Dark\";\n    }\n    else if(color === \"green\"){\n      setMode(\"success\");\n      document.body.style.backgroundColor = \"#90af90\";\n      showAlert(\"Green Mode has been enabled\", \"success\");\n      document.title = \"TextUtlis - Green\";\n    }\n    else if(color === \"blue\"){\n      setMode(\"info\");\n      document.body.style.backgroundColor = \"#8e97b5\";\n      showAlert(\"Blue Mode has been enabled\", \"success\");\n      document.title = \"TextUtlis - Blue\";\n    }\n  }\n  // Exercise\n  // const [greenMode, setGreenMode] = useState(\"green\");\n  // const toggleColorMode = () =>{\n  //   if (colorMode === \"blue\"){\n  //     setColorMode(\"green\")\n  //   }elseif (){\n  //     setColorMode(\"blue\")\n  //   }\n  // }\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutpage=\"About Us\" mode={mode} toggleMode={toggleMode} greenMode={greenMode}/> */}\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutpage=\"About Us\" mode={mode} themeSet={themeSet} />\n      <Alert alert={alert}/>\n      {/* <Navbar/> */}\n      <div className=\"container mb-10\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n    \n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route> */}\n{/* \n      </Switch> */}\n      </div>\n      {/* </Router> */}\n\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}